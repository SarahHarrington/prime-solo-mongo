1. Create a collection named orders.
  > db.createCollection('orders')

2. Insert at least 3 documents that represent an order. 
  > orders.insert({orderDate: new ISODate("2017-02-03"), OrderTotal: "" , lineItems: [] })
  > orders.insert({orderDate: new ISODate("2017-04-04"), OrderTotal: "" , lineItems: [] })
  > > orders.insert({orderDate: new ISODate("2017-01-02"), OrderTotal: "" , lineItems: [] })

3.Find all orders and make them look pretty.
  > orders.find().pretty()
    {
      "_id" : ObjectId("59fb6db4c3f15b43e7df326d"),
      "orderDate" : ISODate("2017-04-04T00:00:00Z"),
      "OrderTotal" : "",
      "lineItems" : [ ]
    }
    {
      "_id" : ObjectId("59fb6dc5c3f15b43e7df326e"),
      "orderDate" : ISODate("2017-01-02T00:00:00Z"),
      "OrderTotal" : "",
      "lineItems" : [ ]
    }
    {
      "_id" : ObjectId("59fb6e2ac3f15b43e7df326f"),
      "orderDate" : ISODate("2017-02-03T00:00:00Z"),
      "OrderTotal" : "",
      "lineItems" : [ ]
    }

4. Find all orders with an orderDate that is after 1/31/2017.
  > orders.find({orderDate: {$gt: new ISODate('2017-01-31')}})
    { "_id" : ObjectId("59fb6db4c3f15b43e7df326d"), "orderDate" : ISODate("2017-04-04T00:00:00Z"), "OrderTotal" : "",         "lineItems" : [ ] }
    { "_id" : ObjectId("59fb6e2ac3f15b43e7df326f"), "orderDate" : ISODate("2017-02-03T00:00:00Z"), "OrderTotal" : "", "lineItems" : [ ] }
    
5. Change the orderTotal from 2/3/2017 to 63 dollars 
> orders.update({orderDate: new ISODate('2017-02-03')}, {$set: {"orderTotal": "63"}} )

6. 
